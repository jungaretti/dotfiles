# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=~/.oh-my-zsh

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="wezm+"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
export UPDATE_ZSH_DAYS=59

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(brew git)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
alias lsl="ls -l"

export EDITOR=vim
export GPG_TTY=$(tty)

if [ -n "$(command -v fnm)" ]; then
  eval "$(fnm env)"
fi

write_profile() {
  local PROFILE="$1"
  local TARGET="$2"
  local TARGET_URL="$3"
  local REGION="$4"

  echo "{
  \"isInternal\": true,
  \"logTelemetry\": true,
  \"vscsTarget\": \"$TARGET\",
  \"vscsTargetUrl\": \"$TARGET_URL\",
  \"vscsRegion\": \"$REGION\"
}" >>"$PROFILE"
}

setup_all_profiles() {
  if [ -e "$PROFILE_DIR" ]; then
    echo "Using existing profiles: $PROFILE_DIR"
    return
  fi

  echo "Creating profiles directory: $PROFILE_DIR"
  mkdir -p "$PROFILE_DIR"

  write_profile "$PROFILE_DIR/codespaces-settings-local.json" "local" "https://codespaces.servicebus.windows.net/$ALIAS" "WestUs2"
  write_profile "$PROFILE_DIR/codespaces-settings-dev.json" "development" "https://online.dev.core.vsengsaas.visualstudio.com" "WestUs2"
  write_profile "$PROFILE_DIR/codespaces-settings-ppe.json" "ppe" "https://online-ppe.core.vsengsaas.visualstudio.com" "WestUs2"
  write_profile "$PROFILE_DIR/codespaces-settings-prod.json" "prod" "https://online.visualstudio.com" "WestUs2"
}

config_ext() {
  TARGET="${1:-prod}"
  # Todo: trash these
  ALIAS="${2:-jpungaretti}"
  PROFILE_DIR="${3:-$HOME/codespaces-profiles}"

  setup_all_profiles "$ALIAS" "$PROFILE_DIR"

  case $TARGET in
  "local" | "dev" | "ppe" | "prod")
    ln -sf "$PROFILE_DIR/codespaces-settings-$TARGET.json" ~/codespaces-settings.json
    cat ~/codespaces-settings.json
    ;;
  *)
    echo "Unknown target: $TARGET"
    return 1
    ;;
  esac
}

# this is a custom function that provides matches for the bash autocompletion
_config_ext_complete() {
  envs=(local dev ppe prod)

  # echo hello
  # [ -z "$2" ] && echo empty dollar2 || echo not empty dollar2

  # if [ "$2" = "--" ]; then
  #   COMPREPLY="${envs[@]}"
  #   return
  # fi 

  for env in "${envs[@]}"; do
    # existing text is $2
    if [[ "$env" =~ "^$2" ]] || [[ "$2" = "--" ]]; then
      COMPREPLY+=( "$env" )
    fi
  done
}

# this line registers our custom autocompletion function to be invoked 
# when completing arguments to the repo command
complete -F _config_ext_complete config_ext

export config_ext
